APARSE   TITLE 'CUCCA VM NETWORK MAILER VERSION 1 - ADDRESS PARSER'     00001000
*---------------------------------------------------------------------* 00002000
*      MAILER -- Copyright (c) 1982,1985 Columbia University.         * 00003000
*    Program Property of the Trustees of Columbia University in the   * 00004000
*    City of New York.                                                * 00005000
*---------------------------------------------------------------------* 00006000
APARSE   CSECT                                                          00007000
* APARSE   -                                                            00008000
*  This routine parses an address list by calling PRSAL and             00009490
*  plugs the returned values into the FIELDD supplied.                  00010000
*                                                                       00011000
* LAST EDIT: 4/12/82 BY ALAN CROSSWELL                                  00012000
*                                                                       00013000
* CALLED VIA -                                                          00014000
*  CALL APARSE,(MAILBLOK,FIELDD,STKP,STKL)                              00015000
         SPACE ,                                                        00016000
PAB      DSECT ,                                                        00017000
@MBLOK   DS    A             ADDRESS OF MAILBLOK                        00018000
@FIELDD  DS    A             ADDRESS OF FIELD DESCRIPTOR                00019000
@STK     DS    2F            STACK POINTER                              00020000
         SPACE ,                                                        00021000
         SPACE                                                          00022000
* REGISTER USAGE -                                                      00023000
R0  EQU  0 -                                                            00024000
R1  EQU  1 -                                                            00025000
R2  EQU  2 -                                                            00026000
R3  EQU  3 -                                                            00027000
R4  EQU  4 -                                                            00028000
R5  EQU  5 -                                                            00029000
R6  EQU  6 -                                                            00030000
R7  EQU  7 -                                                            00031000
R8  EQU  8 -                                                            00032000
R9  EQU  9 -                                                            00033000
R10 EQU 10 -                                                            00034000
R11 EQU 11 - MAILBLOK BASE                                              00035000
R12 EQU 12 - PROGRAM BASE                                               00036000
R13 EQU 13 - SAVE AREA                                                  00037000
R14 EQU 14 - SUBROUTINE LINKAGE                                         00038000
R15 EQU 15 - SUBROUTINE LINKAGE                                         00039000
         SPACE                                                          00040000
         PRINT NOGEN                                                    00041000
         BLOCKS ,                                                       00042000
         SPACE 1                                                        00042100
         COPY  DEBUG                                                    00042200
         PRINT OFF                                                      00042300
         NUCON DSECT                                                    00042400
         PRINT ON                                                       00042500
         EJECT                                                          00043000
APARSE   CSECT ,                                                        00044000
         USING APARSE,R15    TEMPORARY ADDRESSABILITY                   00045000
         B     EYESKIP       BRANCH OVER EYESKIP                        00046000
MYNAME   DC    CL8'APARSE',CL8'&SYSDATE'                                00047000
EYESKIP  DS    0H                                                       00048000
         DROP  R15                                                      00049000
         STM   R14,R12,12(R13) SAVE CALLER'S REGS                       00050000
         LR    R12,R15       PERMANENT ADDRESSABILITY                   00051000
         USING APARSE,R12                                               00052000
         LA    R14,SAVE      MY SAVE AREA                               00053000
         ST    R13,4(R14)    SAVE CALLER'S PTR                          00054000
         ST    R14,8(R13)    CHAIN MINE BACK                            00055000
         LR    R13,R14       SET MY SAVE PTR                            00056000
         LR    R10,R1        GET A BETTER HANDLE                        00057000
         USING PAB,R10       ADDRESS PARMS                              00058000
         L     R6,@FIELDD    GET FIELDD BASE                            00059000
         USING FIELDD,R6     ADDRESS THE FIELD DESCR                    00060000
         MVC   ADSTK(8),@STK COPY STACK POINTERS                        00061000
         MVC   STRADDR,FISTR Copy string pointer                        00062790
         L     R1,FIEND      Get end address                            00063580
         S     R1,FISTR      Minus start address                        00064370
         ST    R1,STRLEN     Store in string length                     00065160
         LA    R1,PRSPARMS                                              00065950
         L     R15,=V(PRSAL) Call RFC822 parser                         00066740
         BALR  R14,R15                                                  00068000
         LTR   R15,R15        Parse successful?                         00068300
         BZ    PARSEOK        ---> Yes                                  00068320
         LA    R1,FISTR       Address of string pointer                 00068340
         ST    R1,@STR        Store into plist                          00068360
         LA    R1,FIEND       Address of end of string pointer          00068380
         ST    R1,@END        Into plist with this also                 00068400
         MVC   @STKPTR(8),@STK Copy addr. of stack pointers into plist  00068420
         LA    R1,ADPARMS     Point to plist                            00068440
         L     R15,=V(ADPARSE) RFC733 parser                            00068460
         BALR  R14,R15        Go to it                                  00068480
         LTR   R15,R15        Parse successful?                         00068500
         BNZ   RET            ---> No                                   00068600
PARSEOK  EQU   *                                                        00068800
         MVC   FIPARS,PARLIST PARSE LIST POINTER                        00069000
         L     R1,FITOK      GET FIELD NAME TOKEND                      00070000
         USING TOKEND,R1     ADDRESS IT                                 00071000
LOOP     EQU   *                                                        00072000
         ICM   R2,B'1111',TOKNEXT  LOOK FOR LIST END                    00073490
         BZ    LOOPOUT                                                  00074000
         LR    R1,R2         CHAIN THRU FIELD NAME TOKENS               00075000
         B     LOOP                                                     00076000
LOOPOUT  EQU   *                                                        00077000
         L     R15,TOKLIST       Pick up token list address             00078580
         ST    R15,TOKNEXT       Add new tokens to chain                00078670
         ST    R1,TOKPREV-TOKEND(R15)  Chain back also                  00078760
         DROP  R1                                                       00079000
         AIF   (NOT &DBGTOK).NODBG00                                    00079070
         LR    R2,R1             Copy address to a better register      00079140
         USING TOKEND,R2                                                00079210
         LINEDIT TEXT='APARSE  : Token list at ........ chained to toke+00079280
               n at ........',                                         +00079350
               SUB=(HEXA,TOKLIST,HEX,(R2)),                            +00079420
               DOT=NO,COMP=NO,RENT=NO                                   00079490
         SPACE 1                                                        00079560
         LR    R1,R2               Point to chain pointer               00079630
         L     R15,=V(SHOWTOKS)                                         00079700
         BALR  R14,R15             Go display token chain               00079770
.NODBG00 ANOP                                                           00079840
         L     R2,FIPARS           Get parse list                       00079849
         USING MBOX,R2                                                  00079858
FIXCOUNT DS    0H                                                       00079867
         LA    R1,MBXRTL           Point to route list TOKEND base      00079876
         BAL   R14,TOKENCNT        Go count tokens in list              00079885
         ST    R0,MBXRCNT          Save count of route list TOKENDs     00079894
         LA    R1,MBXLCL           Point to user list TOKEND base       00079903
         BAL   R14,TOKENCNT        Go count tokens in list              00079912
         ST    R0,MBXLCNT          Save count of user list TOKENDs      00079921
         LA    R1,MBXDML           Point to domain list TOKEND base     00079930
         BAL   R14,TOKENCNT        Go count tokens in list              00079939
         ST    R0,MBXDCNT          Save count of domain list TOKENDs    00079948
         ICM   R2,B'1111',MBXNEXT  Point to next MBOX                   00079957
         BNZ   FIXCOUNT            ---> Do counts for next one          00079966
         DROP  R2                                                       00079975
         SR    R15,R15             Set return code                      00079984
RET      EQU   *                                                        00080000
         L     R13,4(R13)              GET CALLER'S SAVE PTR            00081000
         L     R14,12(R13)             GET R14                          00082000
         LM    R0,R12,20(R13)          GET R0-R12                       00083000
         BR    R14                     RETURN                           00084000
         EJECT ,                                                        00085020
*                                                                       00085040
*  Routine to count number of tokens in a chain                         00085060
*                                                                       00085080
*  Entry conditions:                                                    00085100
*                                                                       00085120
*      R1  - @TOKEND chain header                                       00085140
*      R14 - Return address                                             00085160
*                                                                       00085180
*  Exit conditions:                                                     00085200
*                                                                       00085220
*      R0  - Count of TOKENDs on chain                                  00085240
*                                                                       00085260
         SPACE                                                          00085280
TOKENCNT DS    0H                                                       00085300
         SR    R0,R0               Clear reg                            00085320
         USING TOKEND,R1                                                00085340
TOKENCN1 DS    0H                                                       00085360
         ICM   R1,B'1111',TOKNEXT  Get next pointer                     00085380
         BZR   R14                 ---> End of chain                    00085400
         A     R0,=F'1'            Increment count                      00085420
         B     TOKENCN1            ---> Around again                    00085440
         SPACE 1                                                        00085460
         DROP  R1                                                       00085480
         EJECT ,                                                        00085500
         LTORG ,                                                        00086000
SAVE     DS    18F                     SAVE AREA                        00087000
PRSPARMS DS    0F                                                       00088690
ADSTR    DC    A(STRADDR)                                               00089380
ADLEN    DC    A(STRLEN)                                                00090070
ADSTK    DS    2F            STACK POINTER ADDRESS                      00091000
         DC    A(TOKLIST,PARLIST)                                       00092000
TOKLIST  DS    F                                                        00093000
PARLIST  DS    F                                                        00094000
         SPACE 1                                                        00094200
STRADDR  DS    A             Start of string address                    00094400
STRLEN   DS    F             String length                              00094600
         SPACE 2                                                        00094640
ADPARMS  DS    0F            Parameter list for ADPARSE call            00094680
@STR     DC    A(0)          Addr. of input string pointer              00094720
@END     DC    A(0)          Addr. of end of string pointer             00094760
@STKPTR  DC    A(0)          Addr. of stack pointer                     00094800
@STKLEN  DC    A(0)          Addr. of stack length                      00094840
         DC    A(TOKLIST)    Addr. of token list pointer (output)       00094880
         DC    A(PARLIST)    Addr. of parse list pointer (output)       00094920
         END   APARSE                                                   00095000
